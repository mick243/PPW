## CS
☆ 브라우저 주소창에 www.XX.XX 를 입력하면 어떤일이 일어날까?
☆ GET과 POST의 차이
☆ 객체 지향 프로그래밍이란?
☆ 프로세스와 스레드에 대해 설명
- API 설명
- 자료구조 Queue와 Stack에 대해 설명
- DNS에 대해 설명

## JS
☆ Promis와 Callback의 차이 설명
☆ Async, Await 사용방법
☆ Var, let, const 차이 설명
☆ 이벤트 버블링과 캡처링에 대해 설명
☆ Closure에 대해 설명
☆ 실행 컨텍스트에 대해 설명
☆ Hoisting에 대해 설명
☆ 프로토타입에 대해 설명
☆ 불변성을 유즈하려면 어떻게해야하나?
- Promise를 사용한 비동키 통신과 Async, Await를 사용한 비동기 통신 차이
- Callback Hell 해결법

## FE
☆ 브라우저 랜더링 과정 설명
☆ 브라우저 동작 방식
☆ Webpack, Babel, Polyfill에 대해 설명
☆ CSR과 SSR의 차이
☆ CORS는 무엇인가
☆ 웹 표준을 지키며 개발하는가?
☆ 이벤트 루프와 태스크 큐에 대해 설명
☆ TypeScript를 사용하는 이유
☆ 쿠키, 세션, 웹스토리지의 차이에 대해 설명
☆ 웹사이트 성능 최적화 방법
- 쿠키와 세션에 대해 설명
- 로그인 처리를 할 때 쿠키와 세션을 어떻게 사용하는가?

## React
☆
